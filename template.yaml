AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ka4-today-bot â€“ Telegram + OpenAI notification Lambda bot

Globals:
  Function:
    Runtime: nodejs22.x
    Timeout: 120
    MemorySize: 512
    Environment:
      Variables:
        TELEGRAM_BOT_TOKEN: !Ref TelegramBotToken
        TELEGRAM_SECURITY_TOKEN: !Ref TelegramSecurityToken
        OPENAI_API_KEY: !Ref OpenAiToken
        OPENAI_PROJECT_ID: !Ref OpenAiProjectId
        OPENAI_ASSISTANT_ID: !Ref OpenAiAssistantId
        OPENAI_DEFAULT_PROMPT: !Ref OpenAiDefaultPrompt
        DYNAMODB_ENDPOINT: !Ref DynamoDbEndpoint

Parameters:
  TelegramBotToken:
    Type: String
    Description: Telegram bot token from BotFather
  TelegramSecurityToken:
    Type: String
    Description: Token used to validate incoming webhook requests
  OpenAiToken:
    Type: String
    Description: OpenAI API key (starts with sk-...)
  OpenAiProjectId:
    Type: String
    Description: Project ID from OpenAI (starts with proj-...)
  OpenAiAssistantId:
    Type: String
    Description: Assistant ID from OpenAI (starts with asst-...)
  OpenAiDefaultPrompt:
    Type: String
    Description: Default prompt that will be sent to OpenAI thread
  DynamoDbEndpoint:
    Type: String
    Description: DynamoDb endpoint address
    Default: ""

Resources:
  #####################################################################
  ##                         Storage                                 ##
  #####################################################################
  StorageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: stack/storage.yaml
  #####################################################################
  ##                         Functions                               ##
  #####################################################################
  Ka4TodayTelegramWebhook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ka4today-telegram-webhook-handler
      Handler: src/handlers/ka4TodayTelegramWebhook.handler
      CodeUri: .
      Events:
        Webhook:
          Type: HttpApi
          Properties:
            Path: /ka4-today-webhook
            Method: POST
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !GetAtt Ka4TodayAsyncTelegramProcessor.Arn
  Ka4TodayAsyncTelegramProcessor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ka4today-async-telegram-processor
      Handler: src/handlers/asyncTelegramProcessor.handler
      CodeUri: .
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource:
              - !GetAtt StorageStack.Outputs.Ka4TodayUsersTableArn
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:PutItem
            Resource:
              - !GetAtt StorageStack.Outputs.Ka4TodayLogTableArn
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:GetItem
            Resource:
              - !GetAtt StorageStack.Outputs.Ka4TodayPromptsTableArn

  Ka4TodayCronDailyMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ka4today-cron-daily-message
      Handler: src/handlers/cronDailyMessage.handler
      CodeUri: .
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 2 ? * 2-7 *)  # 2:00 UTC = 5:00 by Kyiv (summer)
            #Schedule: rate(3 minutes)
            Enabled: true
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !GetAtt Ka4TodayAsyncTelegramProcessor.Arn
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
            Resource:
              - !GetAtt StorageStack.Outputs.Ka4TodayUsersTableArn
              - !GetAtt StorageStack.Outputs.UserTrainingScheduleTableArn
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ka4-today-users/index/ActiveUsersIndex
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ka4-today-users-training-schedule/index/ScheduleByDay

  #####################################################################
  ##                         LogGroups                               ##
  #####################################################################
  TelegramWebhookLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/ka4today-telegram-webhook-handler
      RetentionInDays: 7
  Ka4TodayAsyncTelegramProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/ka4today-async-telegram-processor
      RetentionInDays: 7
  CronDailyMessageLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: ka4today-cron-daily-message
      RetentionInDays: 7

